class Solution {
    public boolean isValid(String s) {
        String stack = "";
        
        if(s.isEmpty()) {
            return true;
        }
        
        if(s.matches("[\\[\\]\\(\\)\\{\\}]+")) {
            for(int i = 0; i < s.length(); i++) {
                if(Character.valueOf(s.charAt(i)).equals('[') || Character.valueOf(s.charAt(i)).equals('(') || Character.valueOf(s.charAt(i)).equals('{')) {
                    stack += s.charAt(i);
                } else {
                    if(Character.valueOf(s.charAt(i)).equals(']')) {
                        if (stack.length() == 0 || !Character.valueOf(stack.charAt(stack.length()-1)).equals('[')) {
                            return false;
                        } else {
                            stack = stack.substring(0, stack.length()-1);
                        }
                    } else if(Character.valueOf(s.charAt(i)).equals(')')) {
                        if (stack.length() == 0 || !Character.valueOf(stack.charAt(stack.length()-1)).equals('(')) {
                            return false;
                        } else {
                            stack = stack.substring(0, stack.length()-1);
                        }
                    } else if(Character.valueOf(s.charAt(i)).equals('}')){
                        if (stack.length() == 0 || !Character.valueOf(stack.charAt(stack.length()-1)).equals('{')) {
                            return false;
                        } else {
                            stack = stack.substring(0, stack.length()-1);
                        }
                    } else {
                        return false;
                    }
                }
            }
            
            if(stack.length() == 0) {
                return true;
            } else {
                return false;
            }
        } else {
            throw new IllegalArgumentException("Tehg iven String should contain only brackets.");
        }
    }
}